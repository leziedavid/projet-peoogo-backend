#!/bin/sh
set -e

APP_DIR="/app"
SCHEMA_PATH="prisma/schema.prisma"

echo "üîç D√©marrage du d√©ploiement Prisma..."

cd "$APP_DIR"

# V√©rifier les migrations √©chou√©es
FAILED=$(npx prisma migrate status --schema="$SCHEMA_PATH" | grep "FAILED" || echo "")
if [ -n "$FAILED" ]; then
  echo "‚ö†Ô∏è  Migrations √©chou√©es d√©tect√©es, r√©solution automatique..."
  for MIG in $(echo "$FAILED" | awk '{print $1}'); do
    echo "üõ† Marque migration $MIG comme appliqu√©e sans toucher aux donn√©es"
    npx prisma migrate resolve --applied "$MIG" --schema="$SCHEMA_PATH"
  done
else
  echo "‚úÖ Aucune migration √©chou√©e d√©tect√©e"
fi

# V√©rifier si une migration init existe localement
INIT_MIG=$(ls prisma/migrations | grep "_init" || echo "")

# V√©rifier si la base contient d√©j√† une migration init
INIT_IN_DB=$(npx prisma migrate status --schema="$SCHEMA_PATH" | grep "_init" || echo "")

if [ -n "$INIT_MIG" ] && [ -n "$INIT_IN_DB" ]; then
  echo "‚ö†Ô∏è  Migration init d√©j√† appliqu√©e en base, on la marque comme r√©solue"
  npx prisma migrate resolve --applied "$INIT_MIG" --schema="$SCHEMA_PATH" || true
fi

# D√©ployer toutes les migrations restantes
echo "üöÄ D√©ploiement des migrations (y compris _init si n√©cessaire)"
npx prisma migrate deploy --schema="$SCHEMA_PATH"

# G√©n√©rer le client Prisma
echo "üõ† G√©n√©ration du client Prisma"
npx prisma generate --schema="$SCHEMA_PATH"

echo "‚úÖ Prisma et la base sont maintenant synchronis√©s."
echo "üöÄ D√©marrage de l'application..."
exec node dist/main.js
